basePath: /
definitions:
  admin.AnswerComponentError:
    properties:
      answerComponentId:
        type: string
      error:
        type: string
    type: object
  admin.BasicMetrics:
    properties:
      previousPeriod:
        type: integer
      total:
        type: integer
      variance:
        type: integer
    type: object
  admin.BrandingUpdate:
    properties:
      brandColor:
        type: string
      logoImage:
        type: string
      searchPlaceholder:
        type: string
      searchSuggestions:
        items:
          type: string
        type: array
      showSources:
        type: boolean
      sloganLineOne:
        type: string
      sloganLineTwo:
        type: string
      widgetConfig:
        $ref: '#/definitions/model.WidgetConfig'
    type: object
  admin.ClickRateDataPoint:
    properties:
      clicks:
        type: integer
      searches:
        type: integer
      timeUnit:
        type: string
    type: object
  admin.ConversationDetailResponse:
    properties:
      contextId:
        type: string
      events:
        items:
          $ref: '#/definitions/admin.ConversationEvent'
        type: array
      metadata:
        type: object
      summary:
        type: string
      tags:
        items:
          $ref: '#/definitions/model.Tag'
        type: array
    type: object
  admin.ConversationEvent:
    properties:
      actionType:
        type: string
      date:
        type: string
      eventId:
        type: string
      feedbackText:
        type: string
      formId:
        type: string
      formTitle:
        type: string
      id:
        type: string
      query:
        description: Optional fields based on action type
        type: string
      reasoning:
        type: string
      response:
        type: string
      selectedOptions:
        items:
          type: string
        type: array
      sources:
        items:
          $ref: '#/definitions/model.Source'
        type: array
      submittedData: {}
      title:
        type: string
      url:
        type: string
      voteType:
        type: string
    type: object
  admin.ConversationSummary:
    properties:
      contextId:
        type: string
      date:
        type: string
      firstUserMessage:
        type: string
      metadata:
        type: object
      tags:
        items:
          $ref: '#/definitions/model.Tag'
        type: array
    type: object
  admin.ConversationSummaryResponse:
    properties:
      summary:
        type: string
    type: object
  admin.CreateAnswerComponentRequest:
    properties:
      answerComponentId:
        type: string
      answerComponentType:
        type: string
      content:
        type: object
    type: object
  admin.CreateAnswerComponentsResponse:
    properties:
      created:
        items:
          $ref: '#/definitions/model.AnswerComponent'
        type: array
      errors:
        items:
          $ref: '#/definitions/admin.AnswerComponentError'
        type: array
    type: object
  admin.CreateProjectRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  admin.CreateProjectResponse:
    properties:
      id:
        type: string
      name:
        type: string
      slug:
        type: string
    type: object
  admin.CreateTagRequest:
    properties:
      color:
        type: string
      createdBy:
        type: string
      value:
        type: string
    type: object
  admin.FeedbackCategoryOptions:
    properties:
      negative:
        items:
          $ref: '#/definitions/admin.FeedbackOption'
        type: array
      neutral:
        items:
          $ref: '#/definitions/admin.FeedbackOption'
        type: array
      positive:
        items:
          $ref: '#/definitions/admin.FeedbackOption'
        type: array
    type: object
  admin.FeedbackDistribution:
    properties:
      down:
        type: integer
      neutral:
        type: integer
      up:
        type: integer
    type: object
  admin.FeedbackItem:
    properties:
      action:
        type: string
      contextId:
        type: string
      createdAt:
        type: string
      feedbackText:
        type: string
      id:
        type: string
      query:
        type: string
      reasoning:
        type: string
      requestId:
        type: string
      response:
        type: string
      selectedOptions:
        items:
          type: string
        type: array
      sources:
        items:
          $ref: '#/definitions/model.Source'
        type: array
      voteType:
        type: string
    type: object
  admin.FeedbackMetrics:
    properties:
      distribution:
        $ref: '#/definitions/admin.FeedbackDistribution'
      total:
        type: integer
    type: object
  admin.FeedbackOption:
    properties:
      count:
        type: integer
      optionText:
        type: string
    type: object
  admin.ListConversationsResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/admin.ConversationSummary'
        type: array
      pagination:
        properties:
          currentPage:
            type: integer
          perPage:
            type: integer
          total:
            type: integer
        type: object
    type: object
  admin.ListFeedbackResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/admin.FeedbackItem'
        type: array
      pagination:
        properties:
          currentPage:
            type: integer
          perPage:
            type: integer
          total:
            type: integer
        type: object
    type: object
  admin.ListTagsResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/admin.TagResponse'
        type: array
    type: object
  admin.MetricsResponse:
    properties:
      clickRateData:
        items:
          $ref: '#/definitions/admin.ClickRateDataPoint'
        type: array
      conversations:
        $ref: '#/definitions/admin.BasicMetrics'
      conversationsGrowthData:
        items:
          $ref: '#/definitions/admin.TimeSeriesDataPoint'
        type: array
      feedback:
        $ref: '#/definitions/admin.FeedbackMetrics'
      feedbackGrowthData:
        items:
          $ref: '#/definitions/admin.TimeSeriesDataPoint'
        type: array
      interval:
        type: string
      linkClicks:
        $ref: '#/definitions/admin.BasicMetrics'
      queryWords:
        $ref: '#/definitions/admin.BasicMetrics'
      responsesWithLinks:
        $ref: '#/definitions/admin.BasicMetrics'
      topFeedbackOptions:
        $ref: '#/definitions/admin.FeedbackCategoryOptions'
      userActions:
        items:
          $ref: '#/definitions/admin.UserActionDataPoint'
        type: array
    type: object
  admin.OrganizationCreateRequest:
    properties:
      name:
        type: string
    type: object
  admin.ProjectUpdateRequest:
    properties:
      branding:
        $ref: '#/definitions/admin.BrandingUpdate'
      name:
        type: string
    type: object
  admin.ProjectWithLastTenIngestions:
    properties:
      branding:
        $ref: '#/definitions/model.ProjectBranding'
      createdAt:
        type: string
      iaModel:
        type: string
      iaProvider:
        $ref: '#/definitions/model.IAProvider'
      id:
        type: string
      ingestionSources:
        items:
          $ref: '#/definitions/model.IngestionSource'
        type: array
      ingestions:
        items:
          $ref: '#/definitions/model.Ingestion'
        type: array
      lastTenIngestions:
        items:
          $ref: '#/definitions/model.Ingestion'
        type: array
      name:
        type: string
      organization:
        $ref: '#/definitions/model.Organization'
      organizationId:
        type: string
      slug:
        type: string
      storagePath:
        type: string
      updatedAt:
        type: string
      whatsapp:
        $ref: '#/definitions/model.Whatsapp'
      widget:
        $ref: '#/definitions/model.Widget'
      workflow:
        $ref: '#/definitions/model.Workflow'
    type: object
  admin.TagResponse:
    properties:
      color:
        type: string
      conversations:
        items:
          $ref: '#/definitions/model.Conversation'
        type: array
      count:
        type: integer
      createdAt:
        type: string
      createdBy:
        type: string
      id:
        type: string
      organizationId:
        type: string
      updatedAt:
        type: string
      value:
        type: string
    type: object
  admin.TimeSeriesDataPoint:
    properties:
      timeUnit:
        type: string
      total:
        type: integer
    type: object
  admin.UpdateAnswerComponentRequest:
    properties:
      answerComponentType:
        type: string
      content:
        type: object
    type: object
  admin.UpdateConversationRequest:
    properties:
      tagIds:
        items:
          type: string
        type: array
    type: object
  admin.UpdateConversationResponse:
    properties:
      tags:
        items:
          $ref: '#/definitions/model.Tag'
        type: array
    type: object
  admin.UpdateTagRequest:
    properties:
      color:
        type: string
      value:
        type: string
    type: object
  admin.UserActionDataPoint:
    properties:
      action:
        type: string
      visitors:
        type: integer
    type: object
  admin.createAPIKeyResp:
    properties:
      last6:
        type: string
      plainText:
        description: show once
        type: string
    type: object
  api.AnalyticsEventRequest:
    properties:
      action:
        enum:
        - query:initial
        - query:suggestion
        - query:followup
        - response:generated
        - feedback:select
        - feedback:submit
        - click:responselink
        - click:sourcelink
        - click:cta:*
        - form:submit
        - widget:open
        type: string
      conversationId:
        type: string
      datetime:
        type: string
      payload:
        additionalProperties: true
        type: object
    type: object
  api.AskRequest:
    properties:
      context:
        additionalProperties: true
        type: object
      conversationId:
        type: string
      filters:
        type: string
      query:
        type: string
      stream:
        description: True by default.
        type: boolean
    type: object
  api.BrandingResponse:
    properties:
      brandColor:
        type: string
      logoImage:
        type: string
      searchPlaceholder:
        type: string
      searchSuggestions:
        items:
          type: string
        type: array
      showSources:
        type: boolean
      sloganLineOne:
        type: string
      sloganLineTwo:
        type: string
      widgetConfig:
        $ref: '#/definitions/model.WidgetConfig'
    type: object
  api.CreateConversationRequest:
    properties:
      metadata:
        type: object
    type: object
  api.CreateConversationResponse:
    properties:
      conversationId:
        type: string
    type: object
  api.ProjectResponse:
    properties:
      branding:
        $ref: '#/definitions/api.BrandingResponse'
      id:
        type: string
      name:
        type: string
      slug:
        type: string
    type: object
  apierror.Response:
    properties:
      code:
        $ref: '#/definitions/apperror.Code'
      id:
        type: string
      message:
        type: string
    type: object
  apitypes.AskFullResponse:
    properties:
      content:
        type: string
      conversationId:
        type: string
      queryMessageId:
        type: string
      responseMessageId:
        type: string
    type: object
  apperror.Code:
    enum:
    - server
    - user
    - not-found
    - db
    - vector-db
    - external
    type: string
    x-enum-comments:
      CodeDB: Database errors
      CodeExternal: External service errors, HTTP 502
      CodeNotFound: Resource not found, HTTP 404
      CodeServer: Internal server errors, HTTP 5xx
      CodeUser: User errors, HTTP 4xx
      CodeVectorDB: Vector database errors
    x-enum-varnames:
    - CodeServer
    - CodeUser
    - CodeNotFound
    - CodeDB
    - CodeVectorDB
    - CodeExternal
  model.AnswerComponent:
    properties:
      answerComponentId:
        type: string
      answerComponentType:
        type: string
      content:
        type: object
      createdAt:
        type: string
      id:
        type: string
      projectId:
        type: string
      updatedAt:
        type: string
    type: object
  model.ButtonStyle:
    properties:
      advancedMode:
        type: boolean
      backgroundColor:
        type: string
      borderColor:
        type: string
      borderRadius:
        type: string
      borderWidth:
        type: string
      boxShadow:
        type: string
      customCSS:
        type: string
      fontSize:
        type: string
      fontWeight:
        type: string
      gap:
        type: string
      hoverOpacity:
        type: string
      padding:
        type: string
      textColor:
        type: string
    type: object
  model.Conversation:
    properties:
      createdAt:
        type: string
      id:
        type: string
      messages:
        items:
          $ref: '#/definitions/model.Message'
        type: array
      metadata:
        type: object
      project:
        $ref: '#/definitions/model.Project'
      projectId:
        type: string
      summary:
        type: string
      updatedAt:
        type: string
    type: object
  model.FloatingStyle:
    properties:
      borderRadius:
        type: string
      boxShadow:
        type: string
      height:
        type: string
      margin:
        type: string
      position:
        type: string
      width:
        type: string
    type: object
  model.IAProvider:
    enum:
    - openai
    - openai
    type: string
    x-enum-varnames:
    - IAProviderOpenAI
    - DefaultIAProvider
  model.Ingestion:
    properties:
      createdAt:
        type: string
      id:
        type: string
      ingestionSourcesStatus:
        items:
          $ref: '#/definitions/model.IngestionSourceStatus'
        type: array
      projectId:
        type: string
      status:
        $ref: '#/definitions/model.IngestionStatus'
      updatedAt:
        type: string
    type: object
  model.IngestionSource:
    properties:
      aiProvider:
        description: This is the default provider. Can be overridden in manifest
        type: string
      concurrentFiles:
        type: integer
      concurrentPages:
        type: integer
      createdAt:
        type: string
      extractMethod:
        description: This is the default method. Can be overridden in manifest
        type: string
      filterExt:
        items:
          type: string
        type: array
      id:
        type: string
      kind:
        description: So far it only supports "google-cloud-storage"
        type: string
      mergeLimit:
        type: integer
      name:
        type: string
      output:
        type: string
      outputFilePrefix:
        type: string
      projectId:
        type: string
      separators:
        items:
          type: string
        type: array
      source:
        type: string
      splitMethod:
        description: This is the default method. Can be overridden in manifest
        type: string
      updatedAt:
        type: string
      webConfig:
        type: string
    type: object
  model.IngestionSourceStatus:
    properties:
      createdAt:
        type: string
      error:
        type: string
      ingestionId:
        type: string
      ingestionJobId:
        type: string
      ingestionSourceId:
        type: string
      status:
        $ref: '#/definitions/model.IngestionStatus'
      updatedAt:
        type: string
    type: object
  model.IngestionStatus:
    enum:
    - running
    - finished
    - failed
    type: string
    x-enum-varnames:
    - IngestionStatusRunning
    - IngestionStatusFinished
    - IngestionStatusFailed
  model.InputStyle:
    properties:
      advancedMode:
        type: boolean
      backgroundColor:
        type: string
      borderColor:
        type: string
      borderRadius:
        type: string
      borderWidth:
        type: string
      customCSS:
        type: string
      fontSize:
        type: string
      padding:
        type: string
      placeholder:
        type: string
      placeholderColor:
        type: string
      textColor:
        type: string
      width:
        type: string
    type: object
  model.Message:
    properties:
      content:
        type: string
      conversationId:
        type: string
      createdAt:
        type: string
      id:
        type: string
      role:
        description: '"user" or "assistant"'
        type: string
      updatedAt:
        type: string
      usedPrompt:
        description: |-
          UsedPrompt is the prompt that was used, for the user message, to send it to the LLM,
          after aplying the project prompt template with the sources and rules
        type: string
    type: object
  model.Organization:
    properties:
      activeSubscription:
        $ref: '#/definitions/model.Subscription'
      activeSubscriptionId:
        type: string
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  model.Plan:
    properties:
      createdAt:
        type: string
      id:
        type: string
      maxDefinedRules:
        type: integer
      maxIngestedMB:
        type: integer
      maxMonthlyIngestedMB:
        type: integer
      maxMonthlyQueries:
        type: integer
      name:
        type: string
      price:
        type: number
      updatedAt:
        type: string
    type: object
  model.PlanInfo:
    properties:
      maxDefinedRules:
        type: integer
      maxIngestedMB:
        type: integer
      maxMonthlyIngestedMB:
        type: integer
      maxMonthlyQueries:
        type: integer
      name:
        type: string
      price:
        type: number
    type: object
  model.Project:
    properties:
      branding:
        $ref: '#/definitions/model.ProjectBranding'
      createdAt:
        type: string
      iaModel:
        type: string
      iaProvider:
        $ref: '#/definitions/model.IAProvider'
      id:
        type: string
      ingestionSources:
        items:
          $ref: '#/definitions/model.IngestionSource'
        type: array
      ingestions:
        items:
          $ref: '#/definitions/model.Ingestion'
        type: array
      name:
        type: string
      organization:
        $ref: '#/definitions/model.Organization'
      organizationId:
        type: string
      slug:
        type: string
      storagePath:
        type: string
      updatedAt:
        type: string
      whatsapp:
        $ref: '#/definitions/model.Whatsapp'
      widget:
        $ref: '#/definitions/model.Widget'
      workflow:
        $ref: '#/definitions/model.Workflow'
    type: object
  model.ProjectBranding:
    properties:
      brandColor:
        type: string
      createdAt:
        type: string
      id:
        type: string
      logoImage:
        type: string
      projectId:
        type: string
      searchPlaceholder:
        type: string
      searchSuggestions:
        items:
          type: string
        type: array
      showSources:
        type: boolean
      sloganLineOne:
        type: string
      sloganLineTwo:
        type: string
      updatedAt:
        type: string
      widgetConfig:
        type: object
    type: object
  model.Source:
    properties:
      quote:
        type: string
      title:
        type: string
      url:
        type: string
    type: object
  model.Subscription:
    properties:
      createdAt:
        type: string
      endDate:
        type: string
      id:
        type: string
      organization:
        $ref: '#/definitions/model.Organization'
      organizationId:
        type: string
      plan:
        $ref: '#/definitions/model.Plan'
      planId:
        type: string
      startDate:
        type: string
      subscribedPlan:
        allOf:
        - $ref: '#/definitions/model.PlanInfo'
        description: An immutable copy of the plan terms at subscription time
      updatedAt:
        type: string
    type: object
  model.Tag:
    properties:
      color:
        type: string
      conversations:
        items:
          $ref: '#/definitions/model.Conversation'
        type: array
      createdAt:
        type: string
      createdBy:
        type: string
      id:
        type: string
      organizationId:
        type: string
      updatedAt:
        type: string
      value:
        type: string
    type: object
  model.Whatsapp:
    properties:
      twilioSubaccountSid:
        type: string
      wabaId:
        type: string
      whatsappSenderId:
        type: string
    type: object
  model.Widget:
    properties:
      allowedOrigins:
        items:
          type: string
        type: array
      enabled:
        type: boolean
    type: object
  model.WidgetConfig:
    properties:
      button:
        $ref: '#/definitions/model.ButtonStyle'
      displayMode:
        type: string
      floating:
        $ref: '#/definitions/model.FloatingStyle'
      input:
        $ref: '#/definitions/model.InputStyle'
    type: object
  model.Workflow:
    properties:
      knowledgeCollectionVersion:
        type: string
      rulesCollectionVersion:
        type: string
      summaryPromptCached:
        description: SummaryPromptCached is the cached prompt template that comes
          from the prompt store
        type: string
      summaryPromptID:
        type: string
      systemPromptCached:
        description: SystemPromptCached is the cached prompt template that comes from
          the prompt store
        type: string
      systemPromptID:
        type: string
      userPromptCached:
        description: UserPromptCached is the cached prompt template that comes from
          the prompt store
        type: string
      userPromptID:
        type: string
    type: object
host: api.saas.aifindr.ai
info:
  contact:
    email: producteam@aifindr.ai
    name: Equipo de Producto de AI Findr
  description: |-
    Acceso programático a la plataforma AI Findr.

    AI Findr permite a las organizaciones crear experiencias conversacionales impulsadas por IA utilizando su propia base de conocimientos de contenido. Nuestra plataforma proporciona respuestas precisas y conscientes del contexto, mientras recopila análisis valiosos sobre las interacciones con los clientes y las brechas de conocimiento.

    ## Introducción
    Esta API está documentada en **formato OpenAPI** y proporciona acceso completo a la plataforma AI Findr.
    Permite a los desarrolladores integrar AI Findr directamente en sus aplicaciones, ofreciendo una alternativa a nuestra solución de widget embebible.

    **Características Clave:**
    - **IA Conversacional**: Haz preguntas y recibe respuestas inteligentes basadas en tu contenido ingresado.
    - **Gestión de Contenido**: Ingresa y administra la base de conocimientos de tu organización a través de diversas fuentes.
    - **Analítica en Tiempo Real**: Realiza seguimiento de conversaciones, identifica brechas de conocimiento y comprende las necesidades de los clientes.
    - **Personalización de Marca**: Personaliza la experiencia con la marca y el estilo de tu organización.
    - **Soporte de Streaming**: Obtén respuestas en tiempo real con Server-Sent Events (SSE) para una mejor experiencia de usuario.

    ## Autenticación
    AI Findr admite dos métodos de autenticación:

    ### Autenticación con Clave API (Recomendado para M2M)
    Para integraciones de máquina a máquina, utiliza la autenticación por clave API incluyendo el encabezado `X-API-KEY` en tus solicitudes.
    Las claves API se pueden generar a través del AI Findr Hub.

    ### Autenticación con Token Bearer
    Para operaciones en contexto de usuario, utiliza tokens JWT bearer en el encabezado `Authorization` con el formato: `Bearer {token}`

    ### Contexto de Organización
    La mayoría de los endpoints de la API requieren el encabezado `X-Organization-Id` para especificar dentro de qué contexto de organización operar.
    Esto asegura el aislamiento adecuado de los datos y el control de acceso.

    ## Estructura de la API
    La API expone endpoints públicos para interacciones conversacionales, información de proyectos y seguimiento analítico.

    ## Límites de Frecuencia
    Las solicitudes a la API están sujetas a límites de frecuencia para garantizar el uso justo y la estabilidad del sistema. Los límites varían según el endpoint y el método de autenticación.

    ## Pruebas de la API
    Al probar endpoints en Swagger UI:
    1. **Elegir Autenticación**: Ingresa tu Clave API (ApiKeyAuth) en el botón "Authorize"
    2. **Probar Endpoints**: Todas las solicitudes ahora incluirán automáticamente el encabezado requerido

    ## Soporte
    Para soporte técnico y consultas, contacta a nuestro equipo de ingeniería en [producteam@aifindr.ai](mailto:producteam@aifindr.ai).

    Aprende más sobre AI Findr en [https://aifindr.ai](https://aifindr.ai).
  title: AI Findr API
  version: 0.1.0
paths:
  /api/answerComponents/{answerComponentId}:
    get:
      description: |-
        Recupera un componente de respuesta por su identificador único. Los componentes de respuesta son elementos interactivos que pueden ser incrustados dentro de las respuestas del asistente IA para mejorar la experiencia del usuario, como botones de acción, formularios, carruseles o widgets personalizados.

        **Componentes de respuesta:**
        Los componentes de respuesta te permiten crear experiencias enriquecidas e interactivas dentro de las respuestas de la IA. Se referencian en el array `answerComponents` de las respuestas generadas y pueden incluir varios tipos de elementos interactivos con los que los usuarios pueden interactuar directamente en la conversación.

        **Validación de componentes:**
        El endpoint valida la estructura del contenido del componente según su tipo declarado para garantizar un renderizado y funcionamiento correctos. Si el contenido no coincide con el esquema esperado para el tipo de componente, se devolverá un error.

        **Casos de uso comunes:**
        - Botones de acción para acciones rápidas del usuario (ej.: "Reservar ahora", "Más información")
        - Formularios para recolección de datos (ej.: formularios de contacto, encuestas, captación de leads)
        - Widgets interactivos para mayor participación
        - Componentes personalizados adaptados a necesidades específicas del negocio
      parameters:
      - description: Identificador único del componente de respuesta
        in: path
        name: answerComponentId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Datos del componente de respuesta con contenido validado
          schema:
            $ref: '#/definitions/model.AnswerComponent'
        "404":
          description: Componente de respuesta no encontrado
          schema:
            $ref: '#/definitions/apierror.Response'
        "500":
          description: Error interno del servidor o falla en la validación del contenido
          schema:
            $ref: '#/definitions/apierror.Response'
      security:
      - ApiKeyAuth: []
      summary: Obtener componente de respuesta
      tags:
      - Answer Components
  /api/projects/{projectSlug}/analytics:
    post:
      consumes:
      - application/json
      description: |-
        Registra eventos analíticos para un proyecto para permitir el seguimiento de interacciones de usuario, flujo de conversación y rendimiento del sistema. Estos eventos se utilizan para poblar los paneles de análisis en el AI Findr Hub, ayudándote a comprender el comportamiento del usuario y optimizar la experiencia de tu asistente IA.

        **Campos requeridos:**
        - `action` (string): El tipo de evento que se está registrando. Consulta las acciones disponibles a continuación.
        - `conversationId` (string): El ID de la conversación donde ocurrió este evento
        - `datetime` (string): Marca de tiempo del evento en formato RFC3339 (ISO 8601)

        **Acciones disponibles:**
        - `query:initial`: Primera consulta del usuario en una conversación
        - `query:suggestion`: El usuario seleccionó una consulta sugerida de la lista de sugerencias
        - `query:followup`: El usuario envió un mensaje de seguimiento en una conversación en curso
        - `response:generated`: El asistente IA generó una respuesta con fuentes y razonamiento
        - `feedback:select`: El usuario seleccionó una opción de feedback (positivo/negativo/neutral) antes de enviar
        - `feedback:submit`: El usuario envió feedback detallado con texto opcional y opciones seleccionadas
        - `click:responselink`: El usuario hizo clic en un enlace dentro de la respuesta del asistente IA
        - `click:sourcelink`: El usuario hizo clic en un enlace de fuente en la respuesta
        - `click:cta:[componentId]`: El usuario hizo clic en un componente CTA (reemplazar [componentId] con el ID real)
        - `form:submit`: El usuario envió datos a través de un formulario presentado por el asistente IA
        - `widget:open`: El usuario abrió el widget del asistente IA

        **Estructura del payload:**
        Cada tipo de acción tiene su propia estructura de payload específica con los campos relevantes. El payload contiene datos específicos del evento, como consultas, respuestas, detalles de feedback, objetivos de clic o envíos de formularios. Todos los campos adicionales más allá de los requeridos se almacenan en el payload analítico para el consumo del panel de análisis.

        **Uso de analítica:**
        Los eventos registrados aparecen en el panel de analítica de AI Findr Hub, permitiendo obtener información sobre patrones de conversación, participación de los usuarios, brechas de conocimiento y rendimiento del sistema. Utiliza estos datos para optimizar el contenido, mejorar la experiencia del usuario y medir la efectividad del asistente IA.
      parameters:
      - description: Identificador slug del proyecto
        in: path
        name: projectSlug
        required: true
        type: string
      - description: Datos del evento analítico con acción, ID de conversación, marca
          de tiempo y payload específico de la acción
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.AnalyticsEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Evento registrado exitosamente
          schema:
            type: string
        "400":
          description: Solicitud incorrecta - faltan campos requeridos o formato de
            fecha/hora inválido
          schema:
            $ref: '#/definitions/apierror.Response'
        "404":
          description: Proyecto no encontrado
          schema:
            $ref: '#/definitions/apierror.Response'
        "500":
          description: Error interno del servidor
          schema:
            $ref: '#/definitions/apierror.Response'
      security:
      - ApiKeyAuth: []
      summary: Registrar evento analítico
      tags:
      - Analytics
  /api/projects/{projectSlug}/ask:
    post:
      consumes:
      - application/json
      description: |-
        Envía una pregunta a AI Findr dentro de una conversación de proyecto. Este endpoint admite respuestas en modo streaming y no streaming, permitiendo experiencias de chat en tiempo real o patrones simples de solicitud-respuesta.

        **Campos de solicitud:**
        - `query` (requerido): La pregunta o mensaje del usuario
        - `conversationId` (opcional): ID de conversación obtenido desde el endpoint de creación de conversación. Si se omite, se creará automáticamente una nueva conversación
        - `stream` (opcional): Habilitar respuesta en streaming con Server-Sent Events (por defecto: true)
        - `filters` (opcional): Cadena JSON para filtrar fuentes de conocimiento durante la recuperación
        - `context` (opcional): Datos de contexto adicionales enviados directamente a la IA para proporcionar respuestas más relevantes. Utilízalo para incluir información sobre la página actual del usuario, escenario, datos de formularios, o cualquier otra información contextual que ayude a la IA a dar respuestas más precisas y personalizadas.

        **Streaming vs No Streaming:**
        - **Streaming (por defecto)**: Devuelve Server-Sent Events con fragmentos de respuesta en tiempo real, eventos de recuperación de conocimiento y respuesta final
        - **No streaming**: Devuelve la respuesta completa una vez finalizado el procesamiento

        **Server-Sent Events (Modo Streaming):**
        Cuando el streaming está habilitado, recibirás estos tipos de eventos:
        - `knowledge-retrieved`: Fuentes de conocimiento encontradas y recuperadas de tu contenido
        - `answer-delta`: Fragmentos en tiempo real de la respuesta de la IA a medida que se genera
        - `answer-full`: Respuesta final completa con el ID del mensaje de respuesta
        - `error`: Información de error si ocurre algún problema durante el procesamiento

        **Flujo de respuesta:**
        1. Se recuperan fuentes de conocimiento de tu contenido ingresado
        2. La IA genera la respuesta basada en el conocimiento recuperado, historial de conversación y contexto proporcionado
        3. La respuesta se devuelve ya sea como eventos de streaming o como respuesta completa
      parameters:
      - description: Identificador slug del proyecto
        in: path
        name: projectSlug
        required: true
        type: string
      - description: Parámetros de pregunta y conversación
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/api.AskRequest'
      produces:
      - application/json
      - text/event-stream
      responses:
        "200":
          description: Stream de Server-Sent Events (modo streaming)
          schema:
            type: string
        "202":
          description: Respuesta completa (modo no streaming)
          schema:
            $ref: '#/definitions/apitypes.AskFullResponse'
        "400":
          description: Solicitud incorrecta - parámetros inválidos o falta query
          schema:
            $ref: '#/definitions/apierror.Response'
        "404":
          description: Proyecto no encontrado
          schema:
            $ref: '#/definitions/apierror.Response'
        "500":
          description: Error interno del servidor
          schema:
            $ref: '#/definitions/apierror.Response'
      security:
      - ApiKeyAuth: []
      summary: Hacer pregunta
      tags:
      - Chat
  /api/projects/{projectSlug}/conversation:
    post:
      consumes:
      - application/json
      description: |-
        Crea una nueva sesión de conversación en el proyecto dado. Las conversaciones rastrean sesiones de chat individuales y almacenan metadatos personalizados para propósitos analíticos y de filtrado. Cada conversación obtiene un ID único que debe usarse para los intercambios de mensajes posteriores a través del endpoint ask.

        **Propósito de los metadatos:**
        El campo opcional metadata permite adjuntar pares clave-valor personalizados a las conversaciones. Estos metadatos se almacenan y pueden utilizarse para filtrar conversaciones en el panel de AI Findr Hub, permitiendo mejores análisis y gestión de conversaciones. Casos de uso comunes incluyen el seguimiento de IDs de usuario, información de sesión, fuentes de conversación o etiquetas de categorización personalizada.

        **Próximos pasos:**
        Utiliza el conversationId devuelto con el endpoint `/api/projects/{projectSlug}/ask` para enviar mensajes.
      parameters:
      - description: Identificador slug del proyecto (nombre del proyecto amigable
          para URL)
        in: path
        name: projectSlug
        required: true
        type: string
      - description: Solicitud de creación de conversación con metadatos opcionales
        in: body
        name: body
        schema:
          $ref: '#/definitions/api.CreateConversationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Conversación creada exitosamente
          schema:
            $ref: '#/definitions/api.CreateConversationResponse'
        "400":
          description: Solicitud incorrecta - JSON inválido o slug de proyecto incorrecto
          schema:
            $ref: '#/definitions/apierror.Response'
        "404":
          description: Proyecto no encontrado
          schema:
            $ref: '#/definitions/apierror.Response'
        "500":
          description: Error interno del servidor
          schema:
            $ref: '#/definitions/apierror.Response'
      security:
      - ApiKeyAuth: []
      summary: Crear conversación
      tags:
      - Chat
  /api/widget/{projectSlug}:
    get:
      description: |-
        Recupera la configuración del proyecto y la información de marca necesarias para incrustar el widget de AI Findr en sitios web externos. Este endpoint proporciona todas las opciones de estilo, ajustes de comportamiento y opciones de personalización necesarias para mostrar un widget de asistente IA completamente personalizado.

        **Integración de Widget:**
        Este endpoint es la base para la integración del widget, proporcionando la configuración completa necesaria para incrustar AI Findr en tu sitio web. La respuesta incluye metadatos del proyecto, identidad visual de la marca y configuraciones de comportamiento del widget.

        **Campos de Respuesta de Branding:**
        - `logoImage`: URL del logotipo de tu organización para mostrar en el widget
        - `brandColor`: Color principal de la marca en formato hex para el tema del widget
        - `sloganLineOne/sloganLineTwo`: Mensajes de bienvenida personalizados que se muestran a los usuarios
        - `searchPlaceholder`: Texto de marcador de posición mostrado en el campo de entrada
        - `searchSuggestions`: Array de consultas sugeridas mostradas a los usuarios
        - `showSources`: Indica si se muestran enlaces de fuentes en las respuestas de la IA
        - `widgetConfig`: Configuración detallada de estilo para la apariencia y el comportamiento del widget

        **Uso:**
        Utiliza este endpoint durante la inicialización del widget para obtener la marca y la configuración. La respuesta contiene todos los ajustes visuales y de comportamiento necesarios para crear una experiencia consistente y personalizada que coincida con la identidad de tu organización.

        **Valores por Defecto:**
        El endpoint devuelve valores por defecto para cualquier opción de branding que no haya sido personalizada, asegurando que el widget siempre tenga una configuración completa.
      parameters:
      - description: Identificador slug del proyecto para la integración del widget
        in: path
        name: projectSlug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Configuración del proyecto con marca y ajustes del widget
          schema:
            $ref: '#/definitions/api.ProjectResponse'
        "404":
          description: Proyecto no encontrado
          schema:
            $ref: '#/definitions/apierror.Response'
        "500":
          description: Error interno del servidor
          schema:
            $ref: '#/definitions/apierror.Response'
      security:
      - ApiKeyAuth: []
      summary: Obtener detalles del widget
      tags:
      - Widget
schemes:
- https
securityDefinitions:
  ApiKeyAuth:
    description: Clave API para autenticación máquina a máquina. Genera una a través
      del AI Findr Hub. Recomendado para integraciones del lado del servidor y flujos
      de trabajo automatizados.
    in: header
    name: X-API-KEY
    type: apiKey
  OrgIdAuth:
    description: ID de organización para aislamiento de datos multi-tenant. Requerido
      para la mayoría de los endpoints. Encuentra tu ID de organización en el panel
      de AI Findr o recupéralo usando el endpoint `/admin/api/organization`. Establece
      esto una vez para probar todos los endpoints dentro del contexto de tu organización.
    in: header
    name: X-Organization-Id
    type: apiKey
swagger: "2.0"
tags:
- description: Endpoints para obtener los valores de estilo del widget para integrar
    AI Findr en sitios web externos
  name: Widget
- description: Endpoints de IA conversacional para hacer preguntas y crear una nueva
    conversación
  name: Chat
- description: Endpoints de envío de eventos de conversación
  name: Analytics
- description: Endpoints para obtener los answer components de un proyecto
  name: Answer Components
x-tagGroups:
- name: Integración Cliente
  tags:
  - Widget
  - Chat
  - Analytics
